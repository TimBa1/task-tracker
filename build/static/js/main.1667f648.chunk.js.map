{"version":3,"sources":["components/AddTask.jsx","components/button.jsx","components/header.jsx","components/task2.jsx","components/Task.jsx","components/footer.jsx","components/about.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","text","setText","date","setDate","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","color","onClick","style","backgroundColor","Header","showAdd","location","useLocation","pathname","Task2","task","onDelete","onBug","onDoubleClick","id","cursor","day","time","Task","onToggle","map","Footer","to","About","App","showAddTask","setShowAddTask","setTask","useEffect","a","fetchTasks","taskFromSever","getTask","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","status","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1667f648.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n   \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n         \r\n        if (!text) {\r\n            alert('please add a task')\r\n            return\r\n        }\r\n        onAdd({ text, date, reminder })\r\n        setText('')\r\n        setDate('')\r\n        setReminder(false)\r\n    }\r\n\r\n   \r\n    \r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit} >\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\"\r\n                    placeholder='Add Task'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\"\r\n                    placeholder='Add Date & Time'\r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\"\r\n                    value={reminder}\r\n                    checked={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type=\"Submit\" value='save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n"," \r\n\r\nconst Button = ({color,text,onClick}) => {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                onClick={onClick} \r\n                style={{backgroundColor:color}}\r\n                className='btn'>\r\n                {text}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n ","\r\nimport { useLocation } from 'react-router';\r\nimport Button from './button';\r\n\r\nconst Header = ({ onAdd, showAdd }) => {\r\n    const location=useLocation()\r\n    return (\r\n        <div className='header'>\r\n            <h1 className=''>TimBa Task Tracker </h1>\r\n            {location.pathname === '/' && <Button color={showAdd ? 'red' : 'green'} onClick={onAdd} text={showAdd ? 'Close' : 'Add'} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\n\r\nconst Task2 = ({task,onDelete,onBug}) => {\r\n    return (\r\n        <div className={`task ${task.reminder && 'reminder'}`}\r\n            onDoubleClick = {()=> onBug(task.id)}>\r\n            <h3>{task.text}\r\n                <FaTimes\r\n                    style={{ color: 'red', cursor: 'pointer' }}\r\n                    onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n            <p>{ task.time}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task2\r\n","import Task2 from './task2';\r\n\r\n\r\nconst Task = ({task,onDelete,onToggle}) => {\r\n   \r\n    return (\r\n        <div> \r\n            {task.map((task) => (\r\n                <Task2 key={task.id} task={task} onDelete={onDelete} onBug={ onToggle}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n\r\n\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>copyright &copy; 2021</p>\r\n             <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back </Link> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useEffect, useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/header\";\nimport Task from \"./components/Task\";\nimport Footer from \"./components/footer\";\nimport About from \"./components/about\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [task, setTask] = useState([]);\n\n  useEffect(() => {\n    const getTask = async () => {\n      const taskFromSever = await fetchTasks();\n      setTask(taskFromSever);\n    };\n    getTask();\n  }, []);\n\n  // fetchtask\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/task\");\n    const data = await res.json();\n    return data;\n  };\n\n  // fetchtask\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/task/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/task\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n    setTask([...task, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n\n    // setTask({ ...task, newTask });\n    // console.log(newTask);\n  };\n\n  // delete task\n\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/task/${id}`, {\n      method: \"DELETE\",\n    });\n    res.status === 200\n      ? setTask(task.filter((task) => task.id !== id))\n      : alert(\"error deleting task\");\n  };\n\n  // ontoggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:5000/task/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    const data = await res.json();\n    setTask(\n      task.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <div>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {task.length > 0 ? (\n                <Task\n                  task={task}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                \"no task to show\"\n              )}\n            </div>\n          )}\n        />\n        <Route path=\"/\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}